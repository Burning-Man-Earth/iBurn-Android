buildscript {
    repositories {
        jcenter()
    }
    dependencies {
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

repositories {
    mavenCentral()
    jcenter()
    // For Mapbox SDK snapshots. Currently using unreleased map camera bounding
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 28
        versionName "2017.0.1.2"

        applicationId "com.iburnapp.iburn"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        archivesBaseName = "iburn-$versionName-$versionCode"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }


    }

    splits {
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi-v7a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    signingConfigs {
        release {
            // We'll read release signingConfig's data from
            // gradle.properties in the project's root directory
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    flavorDimensions "production"

    productFlavors {
        regular {
            buildConfigField "boolean", "MOCK", "false"
            dimension "production"
        }
        // Mock location and date data
        mock {
            buildConfigField "boolean", "MOCK", "true"
            dimension "production"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            debuggable false
        }
        unsigned {
            minifyEnabled false
            signingConfig null
            debuggable false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

// Read Signing key from gradle.properties located in project root
if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}

def SUPPORT_LIB_VERSION = "27.1.1"
def PLAY_SERVICES_VERSION = "12.0.1"

dependencies {

    // Android Support libraries
    implementation "com.android.support:design:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:support-v13:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:support-v4:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:support-annotations:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:support-dynamic-animation:$SUPPORT_LIB_VERSION"

    // Google Play Services
    implementation "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
    implementation "com.google.android.gms:play-services-location:$PLAY_SERVICES_VERSION"

    // 3rd Party libraries
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation 'net.hockeyapp.android:HockeySDK:4.1.2'
    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.0.3'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'com.patloew.rxlocation:rxlocation:1.0.3'
    implementation 'com.tonicartos:superslim:0.4.13'
    implementation 'xyz.danoz:recyclerviewfastscroller:0.1.3'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.eclipsesource.j2v8:j2v8:4.7.1@aar'
    implementation('com.mapbox.mapboxsdk:mapbox-android-sdk:5.1.3@aar') {
        transitive = true
    }
    implementation 'com.roughike:bottom-bar:2.3.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'

    implementation 'com.github.hotchemi:permissionsdispatcher:2.4.0'
    kapt 'com.github.hotchemi:permissionsdispatcher-processor:2.4.0'

    implementation 'com.jakewharton:butterknife:8.6.0'
    kapt 'com.jakewharton:butterknife-compiler:8.6.0'

    implementation "android.arch.persistence.room:rxjava2:1.1.0-beta2"
    implementation "android.arch.persistence.room:runtime:1.1.0-beta2"
    kapt "android.arch.persistence.room:compiler:1.1.0-beta2"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Test dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation "com.android.support:support-annotations:$SUPPORT_LIB_VERSION"

}